"""
Stage: Development-01
    @author: Deniz Kuzey, 119202077
    @author: Zafer Sercan Yıldız, 119202037

Stage: Development-02
    @author: Yağız Uygun, 119202075
    @author: Nimer Hamou, 117202010
    @author: Ayhan Emre Şermet, 117202098

Stage: Code Review-03
    @author: Süleyman Mehmet Güneş, 119200077
    @author: Ahmet Berkay Seyhun, 119200075

"""
import tkinter as tk


class LoginWindow:
  
    # constructor
    def _init_(self):
        self.window = tk.Tk()

        self._initializeGUI()
        self._addGUIElementsToFrame()

        # start the GUI frame
        self.window.mainloop()


    """
        Initialize GUI elements. If it is necessary, you can add
        more elements.
        ! PLEASE RENAME THE OBJECTS ACCORDING TO THEIR PURPOSES !
        ! YOU CAN ADD MORE ELEMENTS IF IT IS NECESSARY !
    """
    def _initializeGUI(self):
        window.title("Ecommerce Login")
        self.lbl01 = tk.Label(text="Ecommerce Username")
        self.lbl02 = tk.Label(text="User Password")

        self.txt01 = tk.Entry()
        self.txt02 = tk.Entry()

        self.btn01 = tk.Button(text="Login")

        self.btn01.bind("<Button-1>", self.handle_click)
        


    """
        Add GUI elements to the layout of the frame. If it is necessary,
        you can add more elements.
    """
    def _addGUIElementsToFrame(self):
        self.lbl01.grid(row=0, column=0, padx=10, pady=5)
        self.txt01.grid(row=0, column=1, padx=10, pady=5)

        self.lbl02.grid(row=1, column=0, padx=10, pady=5)
        self.txt02.grid(row=1, column=1, padx=10, pady=5)

        self.btn01.grid(row=2, column=0, padx=10, pady=5)
        self.btn02.grid(row=2, column=1, padx=10, pady=5)

    def create_ecommerce_window(self):
        self.after_login_window = tk.Tk()
        self.after_login_window.geometry("640x480")
        self.after_login_window.title('ecommerce')

    def validate_and_login_user(self, event):
        username = self.txt01.get()
        password = self.txt02.get()
        if(username == test_login_username and password == test_login_password):
          # After a successful login, we create a new 'page' or a window to show the ecommerce. 
          self.create_ecommerce_window()
          # Login window can now be destroyed
          self.window.destroy()
          # Start the after login window main loop
          self.after_login_window.mainloop()



    """
        Action listener for the buttons. If "event.widget" is from
        one of the buttons, apply the related operation.
        :param event: action event for detecting which button is clicked
    """
    def handle_click(self, event):
        # check which button is clicked
        if event.widget == self.loginbtn:
            # call login method
            self.login()
        elif event.widget == self.exitbtn:
            # call exit method
            self.exit()
        
    # login function for checking the username and password
    def login(self):
        # check if the username and password are admin
        if self.txt01.get() == "admin" and self.txt02.get() == "admin":
            # create a new window for success message
            top = tk.Toplevel()
            top.geometry("480x360")
            top.title("DROP SHIPPING")
            top.frame = tk.Toplevel(text="Username")
            top.frame = "Username"
            top.mainloop()

        
    # exit function for quitting the application
    def exit(self):
        self.window.destroy()        


    




# main method for testing the application
if __name__ == "__main__":
    LoginWindow()



# main method for testing the application
if _name_ == "_main_":
    LoginWindow()

# Coding Standards
# The usage of comment line is wrong at the beginning. This gives an error. 
# Line 39, the usage of window.title command in wrong place due to that, gives an error. The command has to be in constructor.
# Line 74, the usage of test_login_username, and test_login_password is wrong. Those credentials had to be defined.
# Line 127, extra main method which is unneccesary. 

# Finding Bugs
# Since we can not run the Python code due to errors, we can not see any page.
# The page is probably empty. -There is not any button for a search, and search button itself.-

